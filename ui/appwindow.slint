import { Button, VerticalBox , HorizontalBox, ListView} from "std-widgets.slint";

export struct file_info {
    locked: bool,
    file_name: string,
    file_ver: string,
}

component FileInfo inherits HorizontalLayout {
    in property<file_info> info :  {
        locked: true,
        file-name: "My File.mer",
        file-ver: "12.0",
    };

    property<color> icon-color: info.locked ? #ff4343 : #107c10;

    callback unlock(string);

    padding: 5px;
    height: 48px;

    Rectangle {
        border-width: 1px;
        HorizontalLayout {
            lbl := Text {
                text: "\{info.file_name}: (v\{info.file_ver})";
                vertical-alignment: center;
                font-weight: 900;
                horizontal-stretch: 1;
                font-size: 10pt;
            }
            icon := Image {
                source: info.locked ? @image-url("../assets/icons/protected.svg" ) : @image-url("../assets/icons/unlocked.svg");
                colorize: icon-color;
                height: 100%;
                width: self.height;
                y: 1px;
                horizontal-stretch: 0;

                icn-ta := TouchArea {
                    clicked => {
                        if (info.locked) {
                            unlock(info.file-name)
                        }
                    }
                }

                states [
                    clicked when icn-ta.pressed && info.locked: {
                        colorize: icon-color.darker(0.4);
                    }
                    hvr when icn-ta.has-hover && info.locked : {
                        colorize: icon-color.brighter(0.4);
                    }
                    not-hvr when !icn-ta.has-hover : {
                        colorize: icon-color;
                    }
                ]
            }
        }
    }
}

export component AppWindow inherits Window {
    min-height: 320px;
    min-width: 480px;
    icon: @image-url("../assets/icons/logo.png");
    in property<[file_info]> files;

    callback unlock(string, int);
    callback select_files();

    vl := VerticalLayout {
        ListView {
            for f_info[idx] in files : FileInfo {
                info: f_info;
                unlock => { unlock(f_info.file_name, idx); }
            }
        }
        Button {
            text: "Select Files";
            clicked => { select_files(); }
        }
    }
}
